{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\www\\\\habbobr-front\\\\src\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n// import App from 'next/app'\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport withRedux from \"next-redux-wrapper\";\nimport { INCREMENT_COUNTER } from '../redux/actions/counterActions';\nimport store from '../redux/store';\nimport '../assets/css/bootstrap.min.css';\nimport '../assets/css/style.css';\n\nclass MyApp extends Component {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}; //Anything returned here can be access by the client\n\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    })));\n  }\n\n} //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["C:/www/habbobr-front/src/pages/_app.js"],"names":["React","Component","Provider","withRedux","INCREMENT_COUNTER","store","MyApp","getInitialProps","ctx","pageProps","render","props","makeStore"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,iBAAR,QAAgC,iCAAhC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,OAAO,iCAAP;AACA,OAAO,yBAAP;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC7B,eAAaM,eAAb,CAA6B;AAACN,IAAAA,SAAD;AAAYO,IAAAA;AAAZ,GAA7B,EAA+C;AACxC,UAAMC,SAAS,GAAGR,SAAS,CAACM,eAAV,GAA4B,MAAMN,SAAS,CAACM,eAAV,CAA0BC,GAA1B,CAAlC,GAAmE,EAArF,CADwC,CAGxC;;AACA,WAAO;AAACC,MAAAA,SAAS,EAAEA;AAAZ,KAAP;AACH;;AAEJC,EAAAA,MAAM,GAAG;AACR,UAAM;AAACT,MAAAA,SAAD;AAAYQ,MAAAA,SAAZ;AAAuBJ,MAAAA;AAAvB,QAAgC,KAAKM,KAA3C;AAEA,WACC,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADD;AAKA;;AAhB4B,C,CAmB9B;;;AACA,MAAMG,SAAS,GAAG,MAAMP,KAAxB,C,CAEA;;;AACA,eAAeF,SAAS,CAACS,SAAD,CAAT,CAAqBN,KAArB,CAAf","sourcesContent":["// import App from 'next/app'\r\nimport React, { Component } from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport withRedux from \"next-redux-wrapper\";\r\nimport {INCREMENT_COUNTER} from '../redux/actions/counterActions';\r\nimport store from '../redux/store';\r\n\r\nimport '../assets/css/bootstrap.min.css';\r\nimport '../assets/css/style.css';\r\n\r\nclass MyApp extends Component {\r\n\tstatic async getInitialProps({Component, ctx}) {\r\n        const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\r\n\r\n        //Anything returned here can be access by the client\r\n        return {pageProps: pageProps};\r\n    }\r\n\r\n\trender() {\r\n\t\tconst {Component, pageProps, store} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Component {...pageProps} />\r\n\t\t\t</Provider>\r\n\t\t)\r\n\t}\r\n}\r\n  \r\n//makeStore function that returns a new store for every request\r\nconst makeStore = () => store;\r\n\r\n//withRedux wrapper that passes the store to the App Component\r\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}